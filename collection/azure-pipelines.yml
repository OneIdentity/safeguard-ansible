# Build Safeguard Ansible Plugin Collection

trigger:
  branches:
    include: [ main,  release-* ]
  paths:
    include: [collection]
    exclude: [README.md]

pool:
  vmImage: ubuntu-latest

variables:
  version: '0.9.$(Build.BuildId)'
  targetDir: 'target'
  isPrerelease: ${{ true }}
  isReleaseBranch: $[ or( eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release-') ) ]

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'env | sort'
  displayName: 'Display environment variables'

- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.9

- script: |
    python3 -m pip install --user ansible-core
    python3 -m pip install antsibull-changelog
  displayName: 'Install ansible-core'

- task: PowerShell@2
  displayName: Update the version in galaxy.yml
  inputs:
    targetType: 'inline'
    script: |
      $file = "collection/oneidentity/safeguard/galaxy.yml"
      (Get-Content $file).replace('0.9.0', "$(version)") | Set-Content $file
    failOnStderr: true

- script: |
    cd collection/oneidentity/safeguard
    ansible-galaxy collection build
  displayName: 'Build plugin collection'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/collection/oneidentity/safeguard'
    contents: '*.tar.gz'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy files to staging folder'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'SafeguardCollection'
  displayName: 'Publishing the artifacts'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'ls $(Build.ArtifactStagingDirectory)'
  displayName: 'List staging directory'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com.SafeguardPipelines'
    repositoryName: 'OneIdentity/Safeguard-ansible'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'release-$(version)'
    title: '$(version)'
    isPreRelease: $(isPrerelease)
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    assets: |
      $(Build.ArtifactStagingDirectory)/*.tar.gz
  displayName: 'Creating and publishing a release to Github'
  condition: and(succeeded(), eq(variables.isReleaseBranch, true))
